version: '3'

services:

  zookeeper:
    container_name: zookeeper_service
    image: arm64v8/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - my_network
    restart: always

  kafka:
    container_name: kafka_service
    image: wurstmeister/kafka:latest
    env_file:
      - ./.env
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - my_network
    restart: always
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    container_name: postgres_service
    image: postgres:13.0-alpine
    env_file:
      - ./.env
    depends_on:
      - kafka
    networks:
      - my_network
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api_gateway_service:
    container_name: api_gateway_service
    build:
      context: ../api_gateway_service
    ports:
      - "8000:8000"   
    env_file:
      - ../api_gateway_service/.env
    depends_on:
      - postgres
    networks:
      - my_network
    restart: always

  pdf_writer_service:
    container_name: pdf_writer_service
    build:
      context: ../pdf_writer_service
    env_file:
      - ../pdf_writer_service/.env
    depends_on:
      - api_gateway_service
    networks:
      - my_network
    restart: always
    volumes:
      - pdf_output:/app/output

  vk_api_service:
    container_name: vk_api_service
    build:
      context: ../vk_api_service
    env_file:
      - ../vk_api_service/.env
    depends_on:
      - pdf_writer_service
    networks:
      - my_network
    restart: always

  database_service:
    container_name: database_service
    build:
      context: ../database_service
    env_file:
      - ../database_service/.env
    depends_on:
      - vk_api_service
    networks:
      - my_network
    restart: always

networks:
  my_network:

volumes:
  kafka_data:
  postgres_data:
  pdf_output:
